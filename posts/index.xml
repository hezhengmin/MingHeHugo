<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on MingHe&#39; Blog</title>
    <link>http://example.org/posts/</link>
    <description>Recent content in Posts on MingHe&#39; Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 16 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="http://example.org/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vue Provide 和 Inject</title>
      <link>http://example.org/posts/20230316/</link>
      <pubDate>Thu, 16 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/posts/20230316/</guid>
      <description>原本要傳遞三層
App -&amp;gt; FirstLayer -&amp;gt; SecondLayer -&amp;gt; ThirdLayer
可使用Provide和Inject提供跨多層組件傳遞數據的方式
App -&amp;gt; ThirdLayer
App.vue &amp;lt;template&amp;gt; &amp;lt;div id=&amp;#34;app&amp;#34;&amp;gt; &amp;lt;div :class=&amp;#34;theme&amp;#34;&amp;gt; &amp;lt;button @click=&amp;#34;changeFontSize&amp;#34;&amp;gt;&amp;#34;第一層&amp;#34;字型變大&amp;lt;/button&amp;gt; &amp;lt;FirstLayer ref=&amp;#34;first&amp;#34; /&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/template&amp;gt; &amp;lt;script&amp;gt; import FirstLayer from &amp;#34;./components/FirstLayer&amp;#34;; export default { name: &amp;#34;App&amp;#34;, data() { return { myName: &amp;#34;ming&amp;#34;, theme: &amp;#34;theme&amp;#34; }; }, provide() { return { myName: this.myName, changeBgColor: this.changeBgColor }; }, components: { FirstLayer }, methods: { changeBgColor() { console.log(&amp;#34;changeBgColor&amp;#34;); this.theme = &amp;#34;dark-theme&amp;#34;; }, changeFontSize() { this.</description>
    </item>
    
    <item>
      <title>Git Tutorial</title>
      <link>http://example.org/posts/git-tutorial/</link>
      <pubDate>Sat, 06 Aug 2022 16:20:33 +0800</pubDate>
      
      <guid>http://example.org/posts/git-tutorial/</guid>
      <description>Git設定 查看設定 git config &amp;ndash;list
設定帳號 git config &amp;ndash;global user.name &amp;ldquo;hezhengmin&amp;rdquo;
設定信箱 git config &amp;ndash;global user.email &amp;ldquo;zhengmin099@gmail.com&amp;rdquo;
Git基本用法 建立Repository git init
複製他人專案 git clone https://github.com/hezhengmin/Minesweeper.git
檢查狀態 git status
查詢記錄 git log
新增全部的檔案 git add .
git add &amp;ndash;all
全部修改提交 git commit -am &amp;ldquo;modified&amp;rdquo;
推送到你的遠端 git push origin master
遠端主機分支master更新到本地主機 git pull origin master
刪除檔案 git rm &amp;ldquo;1. Two Sum.cpp&amp;rdquo;
Git分支用法 建立新branch並切換過去 git checkout -b &amp;lt;branch名稱&amp;gt;
查看電腦上的branch(按q可以離開) git branch
查看所有的branch(包含remote) git branch -a</description>
    </item>
    
    <item>
      <title>Postman-儲存JwtToken為全域變數</title>
      <link>http://example.org/posts/postman-post/</link>
      <pubDate>Sat, 06 Aug 2022 14:09:08 +0800</pubDate>
      
      <guid>http://example.org/posts/postman-post/</guid>
      <description>1. 新增script const resp = pm.response.json(); pm.environment.set(&amp;#34;jwtToken&amp;#34;, resp.jwtToken) 程式回傳jwt token 2. 新增JWT變數 3. Request API上加入Token (Authorization) 4. Request API上加入Token (Header) 參考 Postman 儲存 API 變數 JWT Token 驗證資訊</description>
    </item>
    
    <item>
      <title>建立網站</title>
      <link>http://example.org/posts/my-first-post/</link>
      <pubDate>Sun, 29 May 2022 23:30:30 +0800</pubDate>
      
      <guid>http://example.org/posts/my-first-post/</guid>
      <description>安裝 Hugo 官方提供 Hugo安裝路徑 設定環境變數 創建新站點 確認有無安裝hugo hugo version 建立 hugo new site quickstart 添加主題 cd quickstart git init git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke 添加一些內容 hugo new posts/my-first-post.md 啟動 Hugo 服務器 hugo server -D 構建靜態頁面 hugo -D cd public file_server . git init git remote add origin https://github.com/hezhengmin/hezhengmin.github.io.git git add -A git commit -m &amp;#34;init site&amp;#34; git push origin master 開啟http://localhost:1313/ 測試網站 PS D:\Github\Hugo&amp;gt; cd quickstart PS D:\Github\Hugo\quickstart&amp;gt; hugo server -D 參考 https://gohugo.</description>
    </item>
    
  </channel>
</rss>
